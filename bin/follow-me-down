#!/usr/bin/env python

import sys
import optparse
import logging
import urllib
import urllib2

class ua:

    def __init__ (self) :

        class NoRedirectHandler(urllib2.HTTPRedirectHandler):

            def http_error_302(self, req, fp, code, msg, headers):
                infourl = urllib.addinfourl(fp, headers, req.get_full_url())
                infourl.status = code
                infourl.code = code
                return infourl
            
            http_error_300 = http_error_302
            http_error_301 = http_error_302
            http_error_303 = http_error_302
            http_error_307 = http_error_302
            
        opener = urllib2.build_opener(NoRedirectHandler())
        urllib2.install_opener(opener)
    
    def follow (self, url):

        logging.info("follow %s" % url)

        try:
            rsp = urllib2.urlopen(url)
        except Exception, e:
            logging.error("failed to follow %s, because %s" % (url, e))
            return None

        if rsp.code == 200:
            return url

        url = rsp.headers.get('Location', None)

        if not url:
            logging.error("failed to follow %s, because it does not have a Location header" % (url, ))
            return None

        return self.follow(url)

if __name__ == '__main__':

    parser = optparse.OptionParser()

    parser.add_option("-v", "--verbose", dest="verbose",
                      help="enable chatty logging; default is false", 
                      action="store_true", default=False)

    options, args = parser.parse_args()
    
    if options.verbose:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    ua = ua()

    for url in args:
        url2 = ua.follow(url)
        logging.info("%s points to %s" % (url, url2))
